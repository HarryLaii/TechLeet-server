import { MigrationInterface, QueryRunner } from "typeorm";

export class Init1756540878372 implements MigrationInterface {
    name = 'Init1756540878372'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."skill_category_enum" AS ENUM('programming_language', 'framework', 'database', 'tool', 'cloud_platform', 'methodology', 'soft_skill', 'certification', 'other')`);
        await queryRunner.query(`CREATE TABLE "skill" ("skillId" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "canonicalName" character varying(100) NOT NULL, "description" character varying(500), "category" "public"."skill_category_enum" NOT NULL, "isActive" boolean NOT NULL DEFAULT true, "embedding" character varying, "priority" integer NOT NULL DEFAULT '0', "metadata" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_d117352e09b3185682f80b7e01f" UNIQUE ("canonicalName"), CONSTRAINT "PK_c8d3505ed7696ec1cc12ba1fe05" PRIMARY KEY ("skillId")); COMMENT ON COLUMN "skill"."skillId" IS 'Unique identifier for the skill'; COMMENT ON COLUMN "skill"."canonicalName" IS 'Canonical name of the skill (standardized form)'; COMMENT ON COLUMN "skill"."description" IS 'Description of the skill'; COMMENT ON COLUMN "skill"."category" IS 'Category of the skill'; COMMENT ON COLUMN "skill"."isActive" IS 'Whether the skill is active and should be used for matching'; COMMENT ON COLUMN "skill"."embedding" IS 'Vector embedding of the skill name and description for semantic matching'; COMMENT ON COLUMN "skill"."priority" IS 'Priority/weight of the skill for matching (higher = more important)'; COMMENT ON COLUMN "skill"."metadata" IS 'Additional metadata about the skill'; COMMENT ON COLUMN "skill"."createdAt" IS 'When the skill was created'; COMMENT ON COLUMN "skill"."updatedAt" IS 'When the skill was last updated'`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_d117352e09b3185682f80b7e01" ON "skill" ("canonicalName") `);
        await queryRunner.query(`CREATE INDEX "IDX_f4cdbe61d68413f4d6a671f8c2" ON "skill" ("isActive") `);
        await queryRunner.query(`CREATE INDEX "IDX_e5a17be1e8e11183678396adb7" ON "skill" ("category") `);
        await queryRunner.query(`CREATE TABLE "skill_alias" ("aliasId" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "skillId" integer NOT NULL, "aliasName" character varying(100) NOT NULL, "context" character varying(200), "isActive" boolean NOT NULL DEFAULT true, "confidence" integer NOT NULL DEFAULT '1', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "skill_id" integer, CONSTRAINT "PK_ce92889dac45c668128459f2984" PRIMARY KEY ("aliasId")); COMMENT ON COLUMN "skill_alias"."aliasId" IS 'Unique identifier for the skill alias'; COMMENT ON COLUMN "skill_alias"."skillId" IS 'Reference to the canonical skill'; COMMENT ON COLUMN "skill_alias"."aliasName" IS 'Alternative name/alias for the skill'; COMMENT ON COLUMN "skill_alias"."context" IS 'Context or notes about this alias'; COMMENT ON COLUMN "skill_alias"."isActive" IS 'Whether this alias is active and should be used for matching'; COMMENT ON COLUMN "skill_alias"."confidence" IS 'Confidence score for this alias mapping (1-10)'; COMMENT ON COLUMN "skill_alias"."createdAt" IS 'When the alias was created'; COMMENT ON COLUMN "skill_alias"."updatedAt" IS 'When the alias was last updated'; COMMENT ON COLUMN "skill_alias"."skill_id" IS 'Unique identifier for the skill'`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_4080dd2eab0f26f0507169204f" ON "skill_alias" ("aliasName", "skillId") `);
        await queryRunner.query(`CREATE INDEX "IDX_b6f386f7faa91ac39c159c0a76" ON "skill_alias" ("skillId") `);
        await queryRunner.query(`CREATE INDEX "IDX_d3f2da8a52a4901e507cbe4401" ON "skill_alias" ("aliasName") `);
        await queryRunner.query(`CREATE TABLE "interview" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "isActive" boolean NOT NULL DEFAULT true, "notes" text, "interviewId" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "interviewType" character varying(50) NOT NULL, "scheduledDate" TIMESTAMP NOT NULL, "durationMinutes" integer NOT NULL DEFAULT '60', "location" character varying(200), "meetingLink" character varying(255), "status" character varying(50) NOT NULL DEFAULT 'scheduled', "agenda" text, "interviewNotes" text, "score" integer, "feedback" text, "result" character varying(50), "strengths" text, "weaknesses" text, "technicalAssessment" text, "communicationAssessment" text, "culturalFitAssessment" text, "recommendForNextRound" boolean, "questionsAsked" text, "candidateQuestions" text, "actualStartTime" TIMESTAMP, "actualEndTime" TIMESTAMP, "cancellationReason" text, "followUpActions" text, "additionalNotes" text, "applicationId" integer NOT NULL, "interviewerId" integer NOT NULL, "secondaryInterviewerId" integer, CONSTRAINT "PK_101ac1d1367f2bc36c822615d72" PRIMARY KEY ("interviewId")); COMMENT ON COLUMN "interview"."createdAt" IS 'Record creation timestamp'; COMMENT ON COLUMN "interview"."updatedAt" IS 'Record last update timestamp'; COMMENT ON COLUMN "interview"."deletedAt" IS 'Soft delete timestamp'; COMMENT ON COLUMN "interview"."isActive" IS 'Whether this record is active'; COMMENT ON COLUMN "interview"."notes" IS 'Additional notes or comments'; COMMENT ON COLUMN "interview"."interviewId" IS 'Unique identifier for the interview'; COMMENT ON COLUMN "interview"."interviewType" IS 'Type of interview (phone, video, onsite, technical, hr, final)'; COMMENT ON COLUMN "interview"."scheduledDate" IS 'Scheduled date and time for the interview'; COMMENT ON COLUMN "interview"."durationMinutes" IS 'Interview duration in minutes'; COMMENT ON COLUMN "interview"."location" IS 'Interview location or address'; COMMENT ON COLUMN "interview"."meetingLink" IS 'Video meeting link (Zoom, Teams, etc.)'; COMMENT ON COLUMN "interview"."status" IS 'Interview status (scheduled, confirmed, in-progress, completed, cancelled, no-show)'; COMMENT ON COLUMN "interview"."agenda" IS 'Interview agenda or topics to cover'; COMMENT ON COLUMN "interview"."interviewNotes" IS 'Notes taken during the interview'; COMMENT ON COLUMN "interview"."score" IS 'Overall interview score (1-10)'; COMMENT ON COLUMN "interview"."feedback" IS 'Detailed feedback from interviewer'; COMMENT ON COLUMN "interview"."result" IS 'Interview result (pass, fail, pending, strong-pass, weak-pass)'; COMMENT ON COLUMN "interview"."strengths" IS 'Strengths observed during interview'; COMMENT ON COLUMN "interview"."weaknesses" IS 'Areas for improvement or concerns'; COMMENT ON COLUMN "interview"."technicalAssessment" IS 'Technical skills assessment'; COMMENT ON COLUMN "interview"."communicationAssessment" IS 'Communication skills assessment'; COMMENT ON COLUMN "interview"."culturalFitAssessment" IS 'Cultural fit assessment'; COMMENT ON COLUMN "interview"."recommendForNextRound" IS 'Whether interviewer recommends candidate for next round'; COMMENT ON COLUMN "interview"."questionsAsked" IS 'Questions asked during the interview'; COMMENT ON COLUMN "interview"."candidateQuestions" IS 'Candidate questions and concerns'; COMMENT ON COLUMN "interview"."actualStartTime" IS 'Actual start time of the interview'; COMMENT ON COLUMN "interview"."actualEndTime" IS 'Actual end time of the interview'; COMMENT ON COLUMN "interview"."cancellationReason" IS 'Reason for cancellation (if applicable)'; COMMENT ON COLUMN "interview"."followUpActions" IS 'Follow-up actions required'; COMMENT ON COLUMN "interview"."additionalNotes" IS 'Additional notes or comments'; COMMENT ON COLUMN "interview"."applicationId" IS 'Reference to application'; COMMENT ON COLUMN "interview"."interviewerId" IS 'Reference to interviewer employee (User Service)'; COMMENT ON COLUMN "interview"."secondaryInterviewerId" IS 'Reference to secondary interviewer (User Service)'`);
        await queryRunner.query(`CREATE INDEX "IDX_4b65cdca0a5fa89dff3cb6c9ec" ON "interview" ("interviewType") `);
        await queryRunner.query(`CREATE INDEX "IDX_84f257ba7ab70ff620f21bf03e" ON "interview" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_8e6184cbd7bbead14059864349" ON "interview" ("scheduledDate") `);
        await queryRunner.query(`CREATE TABLE "job_posting" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "isActive" boolean NOT NULL DEFAULT true, "notes" text, "jobPostingId" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "title" character varying(200) NOT NULL, "description" text NOT NULL, "requirements" text NOT NULL, "benefits" text, "salaryMin" numeric(10,2), "salaryMax" numeric(10,2), "vacancies" integer NOT NULL DEFAULT '1', "applicationDeadline" date NOT NULL, "status" character varying(50) NOT NULL DEFAULT 'draft', "location" character varying(100), "employmentType" character varying(50), "experienceLevel" character varying(50), "skills" text, "minExperience" integer, "maxExperience" integer, "educationLevel" character varying(100), "departmentId" integer NOT NULL, "positionId" integer NOT NULL, "hiringManagerId" integer, CONSTRAINT "PK_b7034222385459861fe57e17396" PRIMARY KEY ("jobPostingId")); COMMENT ON COLUMN "job_posting"."createdAt" IS 'Record creation timestamp'; COMMENT ON COLUMN "job_posting"."updatedAt" IS 'Record last update timestamp'; COMMENT ON COLUMN "job_posting"."deletedAt" IS 'Soft delete timestamp'; COMMENT ON COLUMN "job_posting"."isActive" IS 'Whether this record is active'; COMMENT ON COLUMN "job_posting"."notes" IS 'Additional notes or comments'; COMMENT ON COLUMN "job_posting"."jobPostingId" IS 'Unique identifier for the job posting'; COMMENT ON COLUMN "job_posting"."title" IS 'Job posting title'; COMMENT ON COLUMN "job_posting"."description" IS 'Detailed job description'; COMMENT ON COLUMN "job_posting"."requirements" IS 'Job requirements and qualifications'; COMMENT ON COLUMN "job_posting"."benefits" IS 'Benefits and perks offered'; COMMENT ON COLUMN "job_posting"."salaryMin" IS 'Minimum salary offered (VND)'; COMMENT ON COLUMN "job_posting"."salaryMax" IS 'Maximum salary offered (VND)'; COMMENT ON COLUMN "job_posting"."vacancies" IS 'Number of open positions'; COMMENT ON COLUMN "job_posting"."applicationDeadline" IS 'Application deadline'; COMMENT ON COLUMN "job_posting"."status" IS 'Job posting status (draft, published, closed, cancelled)'; COMMENT ON COLUMN "job_posting"."location" IS 'Work location or remote'; COMMENT ON COLUMN "job_posting"."employmentType" IS 'Employment type (full-time, part-time, contract, internship)'; COMMENT ON COLUMN "job_posting"."experienceLevel" IS 'Experience level required (entry, junior, senior, lead, manager)'; COMMENT ON COLUMN "job_posting"."skills" IS 'Required skills (comma-separated or JSON)'; COMMENT ON COLUMN "job_posting"."minExperience" IS 'Minimum years of experience required'; COMMENT ON COLUMN "job_posting"."maxExperience" IS 'Maximum years of experience preferred'; COMMENT ON COLUMN "job_posting"."educationLevel" IS 'Education level required'; COMMENT ON COLUMN "job_posting"."departmentId" IS 'Reference to department (Company Service)'; COMMENT ON COLUMN "job_posting"."positionId" IS 'Reference to position (Company Service)'; COMMENT ON COLUMN "job_posting"."hiringManagerId" IS 'Reference to hiring manager (User Service)'`);
        await queryRunner.query(`CREATE INDEX "IDX_2dcb917cfb676332486c7abae8" ON "job_posting" ("applicationDeadline") `);
        await queryRunner.query(`CREATE INDEX "IDX_18d9a774d7e190b22957c6f238" ON "job_posting" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_600d89c6af3239fc04fe68b6ee" ON "job_posting" ("title") `);
        await queryRunner.query(`CREATE TYPE "public"."files_filetype_enum" AS ENUM('employee_avatar', 'candidate_resume', 'employee_resume', 'company_logo', 'general_document')`);
        await queryRunner.query(`CREATE TYPE "public"."files_status_enum" AS ENUM('active', 'archived', 'deleted')`);
        await queryRunner.query(`CREATE TABLE "files" ("fileId" SERIAL NOT NULL, "originalName" character varying(255) NOT NULL, "fileName" character varying(255) NOT NULL, "fileUrl" text NOT NULL, "mimeType" character varying(100) NOT NULL, "fileSize" bigint NOT NULL, "fileType" "public"."files_filetype_enum" NOT NULL, "referenceId" integer, "status" "public"."files_status_enum" NOT NULL DEFAULT 'active', "description" character varying(500), "metadata" json, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, CONSTRAINT "UQ_ea1da54d986115b89c88939788c" UNIQUE ("fileName"), CONSTRAINT "PK_25150aaac483703a4ade8353fc3" PRIMARY KEY ("fileId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_d524c4903507afd7ffeb653852" ON "files" ("fileType", "status") `);
        await queryRunner.query(`CREATE INDEX "IDX_cf68a28065e587409533818352" ON "files" ("fileType", "referenceId") `);
        await queryRunner.query(`CREATE TYPE "public"."cv_screening_result_status_enum" AS ENUM('pending', 'processing', 'completed', 'failed')`);
        await queryRunner.query(`CREATE TABLE "cv_screening_result" ("screeningId" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "applicationId" integer NOT NULL, "jobPostingId" integer NOT NULL, "status" "public"."cv_screening_result_status_enum" NOT NULL DEFAULT 'pending', "extractedText" text, "overallScore" numeric(5,2), "skillsScore" numeric(5,2), "experienceScore" numeric(5,2), "educationScore" numeric(5,2), "vectorSimilarity" numeric(5,4), "chunkSimilarity" numeric(5,4), "extractedSkills" jsonb, "extractedExperience" jsonb, "extractedEducation" jsonb, "aiSummary" text, "keyHighlights" jsonb, "concerns" jsonb, "errorMessage" text, "processingTimeMs" integer, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "completedAt" TIMESTAMP, CONSTRAINT "PK_ec26ce7d7e0eba361b931a162c1" PRIMARY KEY ("screeningId")); COMMENT ON COLUMN "cv_screening_result"."screeningId" IS 'Unique identifier for the CV screening result'; COMMENT ON COLUMN "cv_screening_result"."applicationId" IS 'Reference to the application being screened'; COMMENT ON COLUMN "cv_screening_result"."jobPostingId" IS 'Reference to the job posting'; COMMENT ON COLUMN "cv_screening_result"."status" IS 'Current status of the screening process'; COMMENT ON COLUMN "cv_screening_result"."extractedText" IS 'Extracted text content from the CV'; COMMENT ON COLUMN "cv_screening_result"."overallScore" IS 'Overall similarity score (0-100)'; COMMENT ON COLUMN "cv_screening_result"."skillsScore" IS 'Skills match score (0-100)'; COMMENT ON COLUMN "cv_screening_result"."experienceScore" IS 'Experience match score (0-100)'; COMMENT ON COLUMN "cv_screening_result"."educationScore" IS 'Education match score (0-100)'; COMMENT ON COLUMN "cv_screening_result"."vectorSimilarity" IS 'Vector similarity score using full CV embedding (0-1)'; COMMENT ON COLUMN "cv_screening_result"."chunkSimilarity" IS 'Chunk-based similarity score using max chunk similarity (0-1)'; COMMENT ON COLUMN "cv_screening_result"."extractedSkills" IS 'Extracted skills from CV'; COMMENT ON COLUMN "cv_screening_result"."extractedExperience" IS 'Extracted work experience details'; COMMENT ON COLUMN "cv_screening_result"."extractedEducation" IS 'Extracted education details'; COMMENT ON COLUMN "cv_screening_result"."aiSummary" IS 'AI-generated summary of the CV'; COMMENT ON COLUMN "cv_screening_result"."keyHighlights" IS 'Key highlights identified by AI'; COMMENT ON COLUMN "cv_screening_result"."concerns" IS 'Potential concerns or gaps identified'; COMMENT ON COLUMN "cv_screening_result"."errorMessage" IS 'Error message if screening failed'; COMMENT ON COLUMN "cv_screening_result"."processingTimeMs" IS 'Processing time in milliseconds'; COMMENT ON COLUMN "cv_screening_result"."createdAt" IS 'When the screening was initiated'; COMMENT ON COLUMN "cv_screening_result"."updatedAt" IS 'When the screening was last updated'; COMMENT ON COLUMN "cv_screening_result"."completedAt" IS 'When the screening was completed'`);
        await queryRunner.query(`CREATE INDEX "IDX_9abeab150991ad1fbbd40edac7" ON "cv_screening_result" ("overallScore") `);
        await queryRunner.query(`CREATE INDEX "IDX_8c42142a0a5256a7f9e288f614" ON "cv_screening_result" ("status") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_49843077c3feb5eddca3256128" ON "cv_screening_result" ("applicationId") `);
        await queryRunner.query(`CREATE TYPE "public"."cv_embedding_embeddingtype_enum" AS ENUM('cv_full_text', 'cv_skills', 'cv_experience', 'cv_education', 'job_description', 'job_requirements')`);
        await queryRunner.query(`CREATE TABLE "cv_embedding" ("embeddingId" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "applicationId" integer, "jobPostingId" integer, "embeddingType" "public"."cv_embedding_embeddingtype_enum" NOT NULL, "originalText" text NOT NULL, "embedding" character varying, "model" character varying(50) NOT NULL DEFAULT 'text-embedding-004', "dimensions" integer NOT NULL DEFAULT '768', "metadata" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_f8a38f2c3b79893e3925a014967" PRIMARY KEY ("embeddingId")); COMMENT ON COLUMN "cv_embedding"."embeddingId" IS 'Unique identifier for the embedding'; COMMENT ON COLUMN "cv_embedding"."applicationId" IS 'Reference to the application (for CV embeddings)'; COMMENT ON COLUMN "cv_embedding"."jobPostingId" IS 'Reference to the job posting (for job embeddings)'; COMMENT ON COLUMN "cv_embedding"."embeddingType" IS 'Type of content that was embedded'; COMMENT ON COLUMN "cv_embedding"."originalText" IS 'Original text that was embedded'; COMMENT ON COLUMN "cv_embedding"."embedding" IS 'Vector embedding of the text (768 dimensions for Gemini text-embedding-004)'; COMMENT ON COLUMN "cv_embedding"."model" IS 'Model used to generate the embedding'; COMMENT ON COLUMN "cv_embedding"."dimensions" IS 'Dimension of the embedding vector'; COMMENT ON COLUMN "cv_embedding"."metadata" IS 'Additional metadata about the embedding'; COMMENT ON COLUMN "cv_embedding"."createdAt" IS 'When the embedding was created'; COMMENT ON COLUMN "cv_embedding"."updatedAt" IS 'When the embedding was last updated'`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_66c47b616d8268e0a1bcd6b9f9" ON "cv_embedding" ("embeddingType", "applicationId", "jobPostingId") `);
        await queryRunner.query(`CREATE INDEX "IDX_87c3f182306666770aef27f907" ON "cv_embedding" ("embeddingType") `);
        await queryRunner.query(`CREATE INDEX "IDX_9e869ac107a81e6076acc02626" ON "cv_embedding" ("jobPostingId") `);
        await queryRunner.query(`CREATE INDEX "IDX_377c0db8c815f6645fc32f8085" ON "cv_embedding" ("applicationId") `);
        await queryRunner.query(`CREATE TABLE "cv_embedding_chunk" ("chunkId" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "applicationId" integer NOT NULL, "chunkIndex" integer NOT NULL, "chunkText" text NOT NULL, "startPosition" integer NOT NULL, "endPosition" integer NOT NULL, "embedding" character varying, "model" character varying(50) NOT NULL DEFAULT 'text-embedding-004', "dimensions" integer NOT NULL DEFAULT '768', "metadata" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_dee326dd8b066951716bc546972" PRIMARY KEY ("chunkId")); COMMENT ON COLUMN "cv_embedding_chunk"."chunkId" IS 'Unique identifier for the embedding chunk'; COMMENT ON COLUMN "cv_embedding_chunk"."applicationId" IS 'Reference to the application'; COMMENT ON COLUMN "cv_embedding_chunk"."chunkIndex" IS 'Index of the chunk within the CV (0-based)'; COMMENT ON COLUMN "cv_embedding_chunk"."chunkText" IS 'Text content of this chunk'; COMMENT ON COLUMN "cv_embedding_chunk"."startPosition" IS 'Start position of chunk in original CV text'; COMMENT ON COLUMN "cv_embedding_chunk"."endPosition" IS 'End position of chunk in original CV text'; COMMENT ON COLUMN "cv_embedding_chunk"."embedding" IS 'Vector embedding of the chunk text (768 dimensions for Gemini text-embedding-004)'; COMMENT ON COLUMN "cv_embedding_chunk"."model" IS 'Model used to generate the embedding'; COMMENT ON COLUMN "cv_embedding_chunk"."dimensions" IS 'Dimension of the embedding vector'; COMMENT ON COLUMN "cv_embedding_chunk"."metadata" IS 'Additional metadata about the chunk'; COMMENT ON COLUMN "cv_embedding_chunk"."createdAt" IS 'When the chunk embedding was created'; COMMENT ON COLUMN "cv_embedding_chunk"."updatedAt" IS 'When the chunk embedding was last updated'`);
        await queryRunner.query(`CREATE INDEX "IDX_7916ed714d82931c67f4508259" ON "cv_embedding_chunk" ("applicationId", "chunkIndex") `);
        await queryRunner.query(`CREATE INDEX "IDX_fd3138f001802d65902f505fc4" ON "cv_embedding_chunk" ("applicationId") `);
        await queryRunner.query(`CREATE TABLE "application" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "isActive" boolean NOT NULL DEFAULT true, "notes" text, "applicationId" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "coverLetter" text, "resumeUrl" character varying(255), "status" character varying(50) NOT NULL DEFAULT 'submitted', "appliedDate" TIMESTAMP NOT NULL DEFAULT now(), "reviewedDate" TIMESTAMP, "reviewNotes" text, "score" integer, "feedback" text, "offerDate" date, "offeredSalary" numeric(10,2), "offerExpiryDate" date, "offerStatus" character varying(50), "offerResponseDate" date, "rejectionReason" text, "expectedStartDate" date, "applicationNotes" text, "priority" character varying(50), "tags" text, "jobPostingId" integer NOT NULL, "candidateId" integer NOT NULL, "reviewedBy" integer, "hiringManagerId" integer, "isScreeningCompleted" boolean NOT NULL DEFAULT false, "screeningScore" numeric(5,2), "screeningStatus" character varying(50), "screeningCompletedAt" TIMESTAMP, CONSTRAINT "PK_1f2d89a4ee463862f5e0b16a27e" PRIMARY KEY ("applicationId")); COMMENT ON COLUMN "application"."createdAt" IS 'Record creation timestamp'; COMMENT ON COLUMN "application"."updatedAt" IS 'Record last update timestamp'; COMMENT ON COLUMN "application"."deletedAt" IS 'Soft delete timestamp'; COMMENT ON COLUMN "application"."isActive" IS 'Whether this record is active'; COMMENT ON COLUMN "application"."notes" IS 'Additional notes or comments'; COMMENT ON COLUMN "application"."applicationId" IS 'Unique identifier for the application'; COMMENT ON COLUMN "application"."coverLetter" IS 'Cover letter submitted by candidate'; COMMENT ON COLUMN "application"."resumeUrl" IS 'URL to resume file for this specific application'; COMMENT ON COLUMN "application"."status" IS 'Application status (submitted, screening, interviewing, offer, hired, rejected, withdrawn)'; COMMENT ON COLUMN "application"."appliedDate" IS 'Date when application was submitted'; COMMENT ON COLUMN "application"."reviewedDate" IS 'Date when application was reviewed'; COMMENT ON COLUMN "application"."reviewNotes" IS 'Notes from reviewer'; COMMENT ON COLUMN "application"."score" IS 'Overall application score (1-10)'; COMMENT ON COLUMN "application"."feedback" IS 'Feedback on the application'; COMMENT ON COLUMN "application"."offerDate" IS 'Date when offer was made'; COMMENT ON COLUMN "application"."offeredSalary" IS 'Salary offered (VND)'; COMMENT ON COLUMN "application"."offerExpiryDate" IS 'Offer expiration date'; COMMENT ON COLUMN "application"."offerStatus" IS 'Offer status (pending, accepted, rejected, expired)'; COMMENT ON COLUMN "application"."offerResponseDate" IS 'Date when offer was responded to'; COMMENT ON COLUMN "application"."rejectionReason" IS 'Reason for rejection (if applicable)'; COMMENT ON COLUMN "application"."expectedStartDate" IS 'Expected start date if hired'; COMMENT ON COLUMN "application"."applicationNotes" IS 'Additional notes about the application'; COMMENT ON COLUMN "application"."priority" IS 'Priority level (low, medium, high, urgent)'; COMMENT ON COLUMN "application"."tags" IS 'Tags for categorization (JSON array)'; COMMENT ON COLUMN "application"."jobPostingId" IS 'Reference to job posting'; COMMENT ON COLUMN "application"."candidateId" IS 'Reference to candidate'; COMMENT ON COLUMN "application"."reviewedBy" IS 'Reference to employee who reviewed application (User Service)'; COMMENT ON COLUMN "application"."hiringManagerId" IS 'Reference to hiring manager (User Service)'; COMMENT ON COLUMN "application"."isScreeningCompleted" IS 'Whether CV screening has been completed'; COMMENT ON COLUMN "application"."screeningScore" IS 'Overall CV screening score (0-100)'; COMMENT ON COLUMN "application"."screeningStatus" IS 'CV screening status (pending, processing, completed, failed)'; COMMENT ON COLUMN "application"."screeningCompletedAt" IS 'When CV screening was completed'`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_51fc99fe756eca69c08450a5e6" ON "application" ("jobPostingId", "candidateId") `);
        await queryRunner.query(`CREATE INDEX "IDX_270a7b703963e7bab683e07b14" ON "application" ("appliedDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_06ff70d67f36b48b66686d0fb4" ON "application" ("status") `);
        await queryRunner.query(`CREATE TABLE "candidate" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "isActive" boolean NOT NULL DEFAULT true, "notes" text, "candidateId" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "firstName" character varying(50) NOT NULL, "lastName" character varying(50) NOT NULL, "email" character varying(100) NOT NULL, "phoneNumber" character varying(20) NOT NULL, "birthDate" date, "gender" boolean, "address" text, "resumeUrl" character varying(255), "linkedinUrl" character varying(255), "githubUrl" character varying(255), "portfolioUrl" character varying(255), "status" character varying(50) NOT NULL DEFAULT 'new', "appliedDate" date NOT NULL DEFAULT ('now'::text)::date, "summary" text, "yearsOfExperience" integer, "currentJobTitle" character varying(100), "currentCompany" character varying(100), "educationLevel" character varying(100), "fieldOfStudy" character varying(100), "university" character varying(100), "graduationYear" integer, "skills" text, "programmingLanguages" text, "expectedSalary" numeric(10,2), "preferredEmploymentType" character varying(50), "availableForRemote" boolean DEFAULT false, "availableStartDate" date, "source" character varying(50), CONSTRAINT "UQ_80e766f22573be71b86b2f05371" UNIQUE ("email"), CONSTRAINT "PK_384e21ec7d5fb032d80d884c0c4" PRIMARY KEY ("candidateId")); COMMENT ON COLUMN "candidate"."createdAt" IS 'Record creation timestamp'; COMMENT ON COLUMN "candidate"."updatedAt" IS 'Record last update timestamp'; COMMENT ON COLUMN "candidate"."deletedAt" IS 'Soft delete timestamp'; COMMENT ON COLUMN "candidate"."isActive" IS 'Whether this record is active'; COMMENT ON COLUMN "candidate"."notes" IS 'Additional notes or comments'; COMMENT ON COLUMN "candidate"."candidateId" IS 'Unique identifier for the candidate'; COMMENT ON COLUMN "candidate"."firstName" IS 'Candidate first name'; COMMENT ON COLUMN "candidate"."lastName" IS 'Candidate last name'; COMMENT ON COLUMN "candidate"."email" IS 'Candidate email address'; COMMENT ON COLUMN "candidate"."phoneNumber" IS 'Candidate phone number'; COMMENT ON COLUMN "candidate"."birthDate" IS 'Candidate date of birth'; COMMENT ON COLUMN "candidate"."gender" IS 'Candidate gender (true=male, false=female)'; COMMENT ON COLUMN "candidate"."address" IS 'Candidate residential address'; COMMENT ON COLUMN "candidate"."resumeUrl" IS 'URL to candidate resume/CV file'; COMMENT ON COLUMN "candidate"."linkedinUrl" IS 'LinkedIn profile URL'; COMMENT ON COLUMN "candidate"."githubUrl" IS 'GitHub profile URL'; COMMENT ON COLUMN "candidate"."portfolioUrl" IS 'Portfolio website URL'; COMMENT ON COLUMN "candidate"."status" IS 'Candidate status (new, screening, interviewing, hired, rejected, withdrawn)'; COMMENT ON COLUMN "candidate"."appliedDate" IS 'Date when candidate first applied'; COMMENT ON COLUMN "candidate"."summary" IS 'Summary or bio provided by candidate'; COMMENT ON COLUMN "candidate"."yearsOfExperience" IS 'Years of total work experience'; COMMENT ON COLUMN "candidate"."currentJobTitle" IS 'Current job title'; COMMENT ON COLUMN "candidate"."currentCompany" IS 'Current company name'; COMMENT ON COLUMN "candidate"."educationLevel" IS 'Highest education level'; COMMENT ON COLUMN "candidate"."fieldOfStudy" IS 'Field of study or major'; COMMENT ON COLUMN "candidate"."university" IS 'University or institution name'; COMMENT ON COLUMN "candidate"."graduationYear" IS 'Graduation year'; COMMENT ON COLUMN "candidate"."skills" IS 'Technical skills (comma-separated or JSON)'; COMMENT ON COLUMN "candidate"."programmingLanguages" IS 'Programming languages known'; COMMENT ON COLUMN "candidate"."expectedSalary" IS 'Expected salary (VND)'; COMMENT ON COLUMN "candidate"."preferredEmploymentType" IS 'Preferred employment type (full-time, part-time, contract)'; COMMENT ON COLUMN "candidate"."availableForRemote" IS 'Whether candidate is available for remote work'; COMMENT ON COLUMN "candidate"."availableStartDate" IS 'Earliest available start date'; COMMENT ON COLUMN "candidate"."source" IS 'How candidate heard about the company'`);
        await queryRunner.query(`CREATE INDEX "IDX_606492cf389854c0380fdf07f2" ON "candidate" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_e9c36d0ca0a1d75055b82fb6f6" ON "candidate" ("phoneNumber") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_80e766f22573be71b86b2f0537" ON "candidate" ("email") `);
        await queryRunner.query(`ALTER TABLE "skill_alias" ADD CONSTRAINT "FK_520e15c9d42dc3afdfc28228003" FOREIGN KEY ("skill_id") REFERENCES "skill"("skillId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "skill_alias" DROP CONSTRAINT "FK_520e15c9d42dc3afdfc28228003"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_80e766f22573be71b86b2f0537"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e9c36d0ca0a1d75055b82fb6f6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_606492cf389854c0380fdf07f2"`);
        await queryRunner.query(`DROP TABLE "candidate"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_06ff70d67f36b48b66686d0fb4"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_270a7b703963e7bab683e07b14"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_51fc99fe756eca69c08450a5e6"`);
        await queryRunner.query(`DROP TABLE "application"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fd3138f001802d65902f505fc4"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7916ed714d82931c67f4508259"`);
        await queryRunner.query(`DROP TABLE "cv_embedding_chunk"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_377c0db8c815f6645fc32f8085"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9e869ac107a81e6076acc02626"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_87c3f182306666770aef27f907"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_66c47b616d8268e0a1bcd6b9f9"`);
        await queryRunner.query(`DROP TABLE "cv_embedding"`);
        await queryRunner.query(`DROP TYPE "public"."cv_embedding_embeddingtype_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_49843077c3feb5eddca3256128"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8c42142a0a5256a7f9e288f614"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9abeab150991ad1fbbd40edac7"`);
        await queryRunner.query(`DROP TABLE "cv_screening_result"`);
        await queryRunner.query(`DROP TYPE "public"."cv_screening_result_status_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cf68a28065e587409533818352"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d524c4903507afd7ffeb653852"`);
        await queryRunner.query(`DROP TABLE "files"`);
        await queryRunner.query(`DROP TYPE "public"."files_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."files_filetype_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_600d89c6af3239fc04fe68b6ee"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_18d9a774d7e190b22957c6f238"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2dcb917cfb676332486c7abae8"`);
        await queryRunner.query(`DROP TABLE "job_posting"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8e6184cbd7bbead14059864349"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_84f257ba7ab70ff620f21bf03e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4b65cdca0a5fa89dff3cb6c9ec"`);
        await queryRunner.query(`DROP TABLE "interview"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d3f2da8a52a4901e507cbe4401"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b6f386f7faa91ac39c159c0a76"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4080dd2eab0f26f0507169204f"`);
        await queryRunner.query(`DROP TABLE "skill_alias"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e5a17be1e8e11183678396adb7"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f4cdbe61d68413f4d6a671f8c2"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d117352e09b3185682f80b7e01"`);
        await queryRunner.query(`DROP TABLE "skill"`);
        await queryRunner.query(`DROP TYPE "public"."skill_category_enum"`);
    }

}
